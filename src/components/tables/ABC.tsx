import Table from './Table';
import TableCell from './TableCell';
import TableHeader from './TableHeader';
import TableRow from './TableRow';
import formatOutput from '@/utils/formatOutput';

interface ABCTableProps {
  table: { [key: string]: (number | string)[] };
  showStepZero: boolean;
}

function ABCTable({ table, showStepZero }: ABCTableProps) {
  const headerOrder = [
    'step',
    'currentPriceParsed',
    'currentSupplyParsed',
    'amountInParsed',
    'tributeCollectedParsed',
    'amountOutParsed',
    'newPriceParsed',
    'slippage',
  ];

  return (
    <Table
      header={
        <>
          <TableHeader
            headerText="step"
            size="s"
            tooltipText="Each step on the curve represents a transaction. The first 3 steps are generated by the market scenario. You can add up to 3 more."
          />
          <TableHeader
            headerText="current price"
            tooltipText="The price of the TEC token, in wxDAI, at the beginning of the transaction."
          />
          <TableHeader
            headerText="total supply"
            tooltipText="The total amount of TEC currently in circulation."
          />
          <TableHeader
            headerText="amount in"
            tooltipText="If the amount in is wxDAI this step is a BUY order.  If the amount in is TEC then the step is a SELL order."
          />
          <TableHeader
            headerText="tribute"
            tooltipText="The amount of funds, in wxDAI, taken from the order and sent to the Common Pool. This is a determined using the parameters Entry & Exit Tribute."
          />
          <TableHeader
            headerText="amount out"
            tooltipText="If the amount out is wxDAI this step is a SELL order.  If the amount out is TEC then this step is a BUY order."
          />
          <TableHeader
            headerText="new price"
            tooltipText="The updated price of the TEC token, in wxDAI, resulting from the transaction."
          />
          <TableHeader
            headerText="price slippage"
            tooltipText={
              <span>
                The TEC token price fluctuates based on the size of buys and
                sells along the curve. The <i>price slippage</i> is the relative
                difference between the <b>Current Price</b> and the{' '}
                <b>average price</b> of TEC that was bought or sold.
              </span>
            }
          />
        </>
      }
      content={table.step?.map((elem, index) => (
        <TableRow hidden={showStepZero && index === 0}>
          {Object.keys(table).map((key, kIndex) => (
            <TableCell
              content={formatOutput(
                table[headerOrder[kIndex]][index],
                headerOrder[kIndex]
              )}
              size={kIndex ? 'm' : 's'}
            />
          ))}
        </TableRow>
      ))}
    />
  );
}

export default ABCTable;
